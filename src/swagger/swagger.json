{
  "openapi": "3.0.0",
  "info": {
    "titulo": "API characters",
    "description": "API with characters",
    "contact": {
      "email": "renatotloutlook.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-bff-characters.herokuapp.com",
      "description": "API no Heroku"
    },
    {
      "url": "http://localhost:3001",
      "description": "API local"
    }
  ],
  "paths": {
    "/users/create": {
      "post": {
        "summary": "Create a new user",
        "description": "Route responsible to create a new user",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "exemples": {
                "Users": {
                  "value": "Thi.code",
                  "username": "Bean",
                  "email": "mrthi@bean.com",
                  "password": "12345",
                  "avatar": "http://static.minilua.com/wp-content/uploads/2015/01/writingasiplease.wordpress.com-rowan-atkinson-not-the-nine-oclock-news-star-at-the-north-community-centre-london-april-1980-610x458-600x450.jpg"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Not found!"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Find all users",
        "description": "Route responsible to find all users",
        "tags": ["Users"],
        "responses": {
          "400": {
            "description": "Not found"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "shema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Get inside of Twitter",
        "description": "Route responsible to do login of a user",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User": {
                  "value": {
                    "email": "teste@teste.com",
                    "password": "000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/characters/create": {
      "post": {
        "summary": "Create a new character",
        "description": "Route responsable to create e new character",
        "tags": ["Characters"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              },
              "examples": {
                "Charater": {
                  "value": {
                    "name": "",
                    "imageURL": "Test swagger's character"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Not found"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          }
        }
      }
    },
    "/characters": {
      "get": {
        "summary": "Find all characters",
        "description": "Route responsible to find all characters",
        "tags": ["Characters"],
        "responses": {
          "400": {
            "description": "Not found"
          },
          "200": {
            "description": "Ok",
            "constent": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/find/{id}": {
      "get": {
        "summary": "Find character by id",
        "description": "Route responsible to finf character by id",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do character para a busca",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/jason": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/update/{id}": {
      "put": {
        "summary": "Edit a character by id",
        "description": "Router responsable to editi a character by id",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da character para a busca",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              },
              "example": {
                "Character": {
                  "value": {
                    "name": "",
                    "imageURL": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          }
        }
      }
    },
    "/characters/delete/{id}": {
      "delete": {
        "summary": "Delete a character by id",
        "description": "Router responsable to delete a character by id",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do character para deleção",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/characters/search": {
      "get": {
        "summary": "Search for character",
        "description": "Router responsable to search character",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "message",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Not found"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Character": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          }
        }
      }
    }
  }
}
